// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: proto/supplier/supplier.proto

package supplier

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Supplier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                        // Уникальный идентификатор поставщика
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                     // Наименование поставщика
	LegalAddress      string                 `protobuf:"bytes,3,opt,name=legal_address,json=legalAddress,proto3" json:"legal_address,omitempty"`                 // Юридический адрес поставщика
	ActualAddress     string                 `protobuf:"bytes,4,opt,name=actual_address,json=actualAddress,proto3" json:"actual_address,omitempty"`              // Фактический адрес поставщика
	WarehouseAddress  string                 `protobuf:"bytes,5,opt,name=warehouse_address,json=warehouseAddress,proto3" json:"warehouse_address,omitempty"`     // Адрес склада поставщика
	ContactPerson     string                 `protobuf:"bytes,6,opt,name=contact_person,json=contactPerson,proto3" json:"contact_person,omitempty"`              // Контактное лицо у поставщика
	Phone             string                 `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`                                                   // Телефон поставщика
	Email             string                 `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`                                                   // Электронная почта поставщика
	Website           string                 `protobuf:"bytes,9,opt,name=website,proto3" json:"website,omitempty"`                                               // Сайт поставщика
	ContractNumber    string                 `protobuf:"bytes,10,opt,name=contract_number,json=contractNumber,proto3" json:"contract_number,omitempty"`          // Номер и дата договора с поставщиком
	ProductCategories string                 `protobuf:"bytes,11,opt,name=product_categories,json=productCategories,proto3" json:"product_categories,omitempty"` // Категории товаров, поставляемых поставщиком
	PurchaseAmount    float64                `protobuf:"fixed64,12,opt,name=purchase_amount,json=purchaseAmount,proto3" json:"purchase_amount,omitempty"`        // Общая сумма закупок у поставщика
	Balance           float64                `protobuf:"fixed64,13,opt,name=balance,proto3" json:"balance,omitempty"`                                            // Баланс по поставщику
	ProductTypes      int64                  `protobuf:"varint,14,opt,name=product_types,json=productTypes,proto3" json:"product_types,omitempty"`               // Количество типов товаров от поставщика
	Comments          string                 `protobuf:"bytes,15,opt,name=comments,proto3" json:"comments,omitempty"`                                            // Комментарии
	Files             string                 `protobuf:"bytes,16,opt,name=files,proto3" json:"files,omitempty"`                                                  // Ссылки на файлы или документы
	Country           string                 `protobuf:"bytes,17,opt,name=country,proto3" json:"country,omitempty"`                                              // Страна поставщика
	Region            string                 `protobuf:"bytes,18,opt,name=region,proto3" json:"region,omitempty"`                                                // Регион или штат поставщика
	TaxId             string                 `protobuf:"bytes,19,opt,name=tax_id,json=taxId,proto3" json:"tax_id,omitempty"`                                     // Идентификационный номер налогоплательщика (ИНН)
	BankDetails       string                 `protobuf:"bytes,20,opt,name=bank_details,json=bankDetails,proto3" json:"bank_details,omitempty"`                   // Банковские реквизиты поставщика
	RegistrationDate  *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=registration_date,json=registrationDate,proto3" json:"registration_date,omitempty"`    // Дата регистрации поставщика
	PaymentTerms      string                 `protobuf:"bytes,22,opt,name=payment_terms,json=paymentTerms,proto3" json:"payment_terms,omitempty"`                // Условия оплаты по контракту
	IsActive          bool                   `protobuf:"varint,23,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`                           // Статус активности поставщика (активен/неактивен)
	OtherFields       string                 `protobuf:"bytes,24,opt,name=other_fields,json=otherFields,proto3" json:"other_fields,omitempty"`                   // Дополнительные пользовательские поля
	CompanyId         int64                  `protobuf:"varint,25,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`                        // Идентификатор компании
}

func (x *Supplier) Reset() {
	*x = Supplier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_supplier_supplier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Supplier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Supplier) ProtoMessage() {}

func (x *Supplier) ProtoReflect() protoreflect.Message {
	mi := &file_proto_supplier_supplier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Supplier.ProtoReflect.Descriptor instead.
func (*Supplier) Descriptor() ([]byte, []int) {
	return file_proto_supplier_supplier_proto_rawDescGZIP(), []int{0}
}

func (x *Supplier) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Supplier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Supplier) GetLegalAddress() string {
	if x != nil {
		return x.LegalAddress
	}
	return ""
}

func (x *Supplier) GetActualAddress() string {
	if x != nil {
		return x.ActualAddress
	}
	return ""
}

func (x *Supplier) GetWarehouseAddress() string {
	if x != nil {
		return x.WarehouseAddress
	}
	return ""
}

func (x *Supplier) GetContactPerson() string {
	if x != nil {
		return x.ContactPerson
	}
	return ""
}

func (x *Supplier) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Supplier) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Supplier) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *Supplier) GetContractNumber() string {
	if x != nil {
		return x.ContractNumber
	}
	return ""
}

func (x *Supplier) GetProductCategories() string {
	if x != nil {
		return x.ProductCategories
	}
	return ""
}

func (x *Supplier) GetPurchaseAmount() float64 {
	if x != nil {
		return x.PurchaseAmount
	}
	return 0
}

func (x *Supplier) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Supplier) GetProductTypes() int64 {
	if x != nil {
		return x.ProductTypes
	}
	return 0
}

func (x *Supplier) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *Supplier) GetFiles() string {
	if x != nil {
		return x.Files
	}
	return ""
}

func (x *Supplier) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Supplier) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Supplier) GetTaxId() string {
	if x != nil {
		return x.TaxId
	}
	return ""
}

func (x *Supplier) GetBankDetails() string {
	if x != nil {
		return x.BankDetails
	}
	return ""
}

func (x *Supplier) GetRegistrationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.RegistrationDate
	}
	return nil
}

func (x *Supplier) GetPaymentTerms() string {
	if x != nil {
		return x.PaymentTerms
	}
	return ""
}

func (x *Supplier) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Supplier) GetOtherFields() string {
	if x != nil {
		return x.OtherFields
	}
	return ""
}

func (x *Supplier) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type SupplierId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *SupplierId) Reset() {
	*x = SupplierId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_supplier_supplier_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupplierId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplierId) ProtoMessage() {}

func (x *SupplierId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_supplier_supplier_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplierId.ProtoReflect.Descriptor instead.
func (*SupplierId) Descriptor() ([]byte, []int) {
	return file_proto_supplier_supplier_proto_rawDescGZIP(), []int{1}
}

func (x *SupplierId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SupplierList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suppliers []*Supplier `protobuf:"bytes,1,rep,name=suppliers,proto3" json:"suppliers,omitempty"`
}

func (x *SupplierList) Reset() {
	*x = SupplierList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_supplier_supplier_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupplierList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplierList) ProtoMessage() {}

func (x *SupplierList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_supplier_supplier_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplierList.ProtoReflect.Descriptor instead.
func (*SupplierList) Descriptor() ([]byte, []int) {
	return file_proto_supplier_supplier_proto_rawDescGZIP(), []int{2}
}

func (x *SupplierList) GetSuppliers() []*Supplier {
	if x != nil {
		return x.Suppliers
	}
	return nil
}

type SupplierCompanyId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *SupplierCompanyId) Reset() {
	*x = SupplierCompanyId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_supplier_supplier_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupplierCompanyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplierCompanyId) ProtoMessage() {}

func (x *SupplierCompanyId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_supplier_supplier_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplierCompanyId.ProtoReflect.Descriptor instead.
func (*SupplierCompanyId) Descriptor() ([]byte, []int) {
	return file_proto_supplier_supplier_proto_rawDescGZIP(), []int{3}
}

func (x *SupplierCompanyId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_proto_supplier_supplier_proto protoreflect.FileDescriptor

var file_proto_supplier_supplier_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x2f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x06, 0x0a, 0x08, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x65, 0x67, 0x61,
	0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x78, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e,
	0x6b, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x47, 0x0a, 0x11,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x0a, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x0c, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x75, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x52, 0x09,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x32, 0xa8,
	0x02, 0x0a, 0x0f, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73,
	0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x1a, 0x14, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x14, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x36, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x75,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x49,
	0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x2e,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x1a, 0x16, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x17, 0x5a, 0x15, 0x2e, 0x2e, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_supplier_supplier_proto_rawDescOnce sync.Once
	file_proto_supplier_supplier_proto_rawDescData = file_proto_supplier_supplier_proto_rawDesc
)

func file_proto_supplier_supplier_proto_rawDescGZIP() []byte {
	file_proto_supplier_supplier_proto_rawDescOnce.Do(func() {
		file_proto_supplier_supplier_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_supplier_supplier_proto_rawDescData)
	})
	return file_proto_supplier_supplier_proto_rawDescData
}

var file_proto_supplier_supplier_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_supplier_supplier_proto_goTypes = []any{
	(*Supplier)(nil),              // 0: supplier.Supplier
	(*SupplierId)(nil),            // 1: supplier.SupplierId
	(*SupplierList)(nil),          // 2: supplier.SupplierList
	(*SupplierCompanyId)(nil),     // 3: supplier.SupplierCompanyId
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 5: google.protobuf.Empty
}
var file_proto_supplier_supplier_proto_depIdxs = []int32{
	4, // 0: supplier.Supplier.registration_date:type_name -> google.protobuf.Timestamp
	0, // 1: supplier.SupplierList.suppliers:type_name -> supplier.Supplier
	0, // 2: supplier.SupplierService.Create:input_type -> supplier.Supplier
	1, // 3: supplier.SupplierService.GetById:input_type -> supplier.SupplierId
	0, // 4: supplier.SupplierService.Update:input_type -> supplier.Supplier
	1, // 5: supplier.SupplierService.Delete:input_type -> supplier.SupplierId
	3, // 6: supplier.SupplierService.GetList:input_type -> supplier.SupplierCompanyId
	1, // 7: supplier.SupplierService.Create:output_type -> supplier.SupplierId
	0, // 8: supplier.SupplierService.GetById:output_type -> supplier.Supplier
	5, // 9: supplier.SupplierService.Update:output_type -> google.protobuf.Empty
	5, // 10: supplier.SupplierService.Delete:output_type -> google.protobuf.Empty
	2, // 11: supplier.SupplierService.GetList:output_type -> supplier.SupplierList
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_supplier_supplier_proto_init() }
func file_proto_supplier_supplier_proto_init() {
	if File_proto_supplier_supplier_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_supplier_supplier_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Supplier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_supplier_supplier_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SupplierId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_supplier_supplier_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SupplierList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_supplier_supplier_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SupplierCompanyId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_supplier_supplier_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_supplier_supplier_proto_goTypes,
		DependencyIndexes: file_proto_supplier_supplier_proto_depIdxs,
		MessageInfos:      file_proto_supplier_supplier_proto_msgTypes,
	}.Build()
	File_proto_supplier_supplier_proto = out.File
	file_proto_supplier_supplier_proto_rawDesc = nil
	file_proto_supplier_supplier_proto_goTypes = nil
	file_proto_supplier_supplier_proto_depIdxs = nil
}
