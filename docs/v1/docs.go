// Package v1 Code generated by swaggo/swag. DO NOT EDIT
package v1

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "ru.system.ru@gmail.com",
            "email": "ru.system.ru@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth": {
            "post": {
                "description": "Аутентификация пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "operationId": "sign-in",
                "parameters": [
                    {
                        "description": "Необходимо указать данные для аутентификации пользователя.",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SignIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Выход из аккаунта пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign out",
                "operationId": "sign-out",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Обновление access токена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh tokens",
                "operationId": "refresh-tokens",
                "parameters": [
                    {
                        "description": "Необходимо указать текущие refresh token и sections.",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.TokensRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Регистрация нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up",
                "operationId": "sign-up",
                "parameters": [
                    {
                        "description": "Необходимо указать данные для регистрации нового пользователя.",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.SignUpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/supplier": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создание поставщика",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "Create supplier",
                "operationId": "create-supplier",
                "parameters": [
                    {
                        "description": "Необходимо указать данные поставщика.",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.InputSupplier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/supplier/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получение поставщика по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "Get supplier by id",
                "operationId": "get-supplier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Supplier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/warehouse": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создание склада",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouse"
                ],
                "summary": "Create warehouse",
                "operationId": "create-warehouse",
                "parameters": [
                    {
                        "description": "Необходимо указать данные склада.",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.InputWarehouse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/warehouse/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получение склада по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouse"
                ],
                "summary": "Get warehouse by id",
                "operationId": "get-warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Warehouse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/domain.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "domain.IdResponse": {
            "type": "object",
            "properties": {
                "id": {}
            }
        },
        "domain.InputSupplier": {
            "type": "object",
            "required": [
                "actual_address",
                "balance",
                "bank_details",
                "contact_person",
                "contract_number",
                "legal_address",
                "name",
                "phone",
                "warehouse_address"
            ],
            "properties": {
                "actual_address": {
                    "description": "Фактический адрес поставщика",
                    "type": "string",
                    "example": "Фактический адрес поставщика"
                },
                "balance": {
                    "description": "Баланс по поставщику",
                    "type": "number",
                    "example": 100
                },
                "bank_details": {
                    "description": "Банковские реквизиты поставщика",
                    "type": "string",
                    "example": "Банковские реквизиты поставщика"
                },
                "comments": {
                    "description": "Комментарии",
                    "type": "string",
                    "example": "Комментарии"
                },
                "contact_person": {
                    "description": "Контактное лицо у поставщика",
                    "type": "string",
                    "maxLength": 140,
                    "example": "Контактное лицо у поставщика"
                },
                "contract_number": {
                    "description": "Номер и дата договора с поставщиком",
                    "type": "string",
                    "example": "Номер и дата договора с поставщиком"
                },
                "country": {
                    "description": "Страна поставщика",
                    "type": "string",
                    "example": "Страна поставщика"
                },
                "email": {
                    "description": "Электронная почта поставщика",
                    "type": "string",
                    "example": "Электронная почта поставщика"
                },
                "files": {
                    "description": "Ссылки на файлы или документы",
                    "type": "string",
                    "example": "Ссылки на файлы или документы"
                },
                "is_active": {
                    "description": "Статус активности поставщика (активен/неактивен)",
                    "type": "boolean",
                    "example": true
                },
                "legal_address": {
                    "description": "Юридический адрес поставщика",
                    "type": "string",
                    "example": "Юридический адрес поставщика"
                },
                "name": {
                    "description": "Наименование поставщика",
                    "type": "string",
                    "maxLength": 140,
                    "minLength": 5,
                    "example": "ООО Название поставщика"
                },
                "other_fields": {
                    "description": "Дополнительные пользовательские поля",
                    "type": "object",
                    "additionalProperties": true
                },
                "payment_terms": {
                    "description": "Условия оплаты по контракту",
                    "type": "string",
                    "example": "Условия оплаты по контракту"
                },
                "phone": {
                    "description": "Телефон поставщика",
                    "type": "string",
                    "minLength": 5,
                    "example": "Телефон поставщика"
                },
                "product_categories": {
                    "description": "Категории товаров, поставляемых поставщиком",
                    "type": "string",
                    "example": "Категории товаров, поставляемых поставщиком"
                },
                "product_types": {
                    "description": "Количество типов товаров от поставщика",
                    "type": "integer",
                    "example": 100
                },
                "purchase_amount": {
                    "description": "Общая сумма закупок у поставщика",
                    "type": "number",
                    "example": 100
                },
                "region": {
                    "description": "Регион или штат поставщика",
                    "type": "string",
                    "example": "Регион или штат поставщика"
                },
                "registration_date": {
                    "description": "Дата регистрации поставщика",
                    "type": "string",
                    "example": "2022-01-01T00:00:00Z"
                },
                "tax_id": {
                    "description": "Идентификационный номер налогоплательщика (ИНН)",
                    "type": "string",
                    "example": "Идентификационный номер налогоплательщика (ИНН)"
                },
                "warehouse_address": {
                    "description": "Адрес склада поставщика",
                    "type": "string",
                    "example": "Адрес склада поставщика"
                },
                "website": {
                    "description": "Сайт поставщика",
                    "type": "string",
                    "example": "Сайт поставщика"
                }
            }
        },
        "domain.InputWarehouse": {
            "type": "object",
            "required": [
                "address",
                "name",
                "phone",
                "responsible_person"
            ],
            "properties": {
                "address": {
                    "description": "Адрес склада",
                    "type": "string",
                    "maxLength": 140,
                    "minLength": 5,
                    "example": "Адрес склада"
                },
                "country": {
                    "description": "Страна склада",
                    "type": "string",
                    "example": "Страна склада"
                },
                "current_occupancy": {
                    "description": "Текущая заполняемость склада",
                    "type": "integer",
                    "example": 50
                },
                "email": {
                    "description": "Электронная почта для связи",
                    "type": "string",
                    "example": "Электронная почта для связи"
                },
                "max_capacity": {
                    "description": "Максимальная вместимость склада",
                    "type": "integer",
                    "example": 100
                },
                "name": {
                    "description": "Название склада",
                    "type": "string",
                    "maxLength": 140,
                    "minLength": 5,
                    "example": "Название склада"
                },
                "other_fields": {
                    "description": "Дополнительные пользовательские поля",
                    "type": "object",
                    "additionalProperties": true
                },
                "phone": {
                    "description": "Контактный телефон склада",
                    "type": "string",
                    "minLength": 5,
                    "example": "Контактный телефон склада"
                },
                "responsible_person": {
                    "description": "Ответственное лицо за склад",
                    "type": "string",
                    "maxLength": 140,
                    "minLength": 5,
                    "example": "Ответственное лицо за склад"
                }
            }
        },
        "domain.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "domain.SignIn": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 8,
                    "example": "admin"
                },
                "username": {
                    "type": "string",
                    "maxLength": 140,
                    "minLength": 5,
                    "example": "admin"
                }
            }
        },
        "domain.SignUp": {
            "type": "object",
            "required": [
                "email",
                "password",
                "phone",
                "username"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "country": {
                    "type": "string",
                    "example": "KZ"
                },
                "email": {
                    "type": "string",
                    "maxLength": 140,
                    "minLength": 5,
                    "example": "dmitry@test.com"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "is_approved": {
                    "type": "boolean",
                    "example": true
                },
                "is_send_system_notification": {
                    "type": "boolean",
                    "example": false
                },
                "language": {
                    "type": "string",
                    "example": "ru"
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 8,
                    "example": "12345678"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 140,
                    "minLength": 7,
                    "example": "+77777777777"
                },
                "position": {
                    "type": "string",
                    "example": "test"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "sections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"full_company_access\"",
                        " \"full_access\"]"
                    ]
                },
                "username": {
                    "type": "string",
                    "maxLength": 140,
                    "minLength": 5,
                    "example": "dmitry"
                }
            }
        },
        "domain.SignUpResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                }
            }
        },
        "domain.Supplier": {
            "type": "object",
            "required": [
                "name",
                "phone"
            ],
            "properties": {
                "actual_address": {
                    "description": "Фактический адрес поставщика",
                    "type": "string"
                },
                "balance": {
                    "description": "Баланс по поставщику",
                    "type": "number"
                },
                "bank_details": {
                    "description": "Банковские реквизиты поставщика",
                    "type": "string"
                },
                "comments": {
                    "description": "Комментарии",
                    "type": "string"
                },
                "contact_person": {
                    "description": "Контактное лицо у поставщика",
                    "type": "string"
                },
                "contract_number": {
                    "description": "Номер и дата договора с поставщиком",
                    "type": "string"
                },
                "country": {
                    "description": "Страна поставщика",
                    "type": "string"
                },
                "email": {
                    "description": "Электронная почта поставщика",
                    "type": "string"
                },
                "files": {
                    "description": "Ссылки на файлы или документы",
                    "type": "string"
                },
                "id": {
                    "description": "Уникальный идентификатор поставщика",
                    "type": "integer"
                },
                "is_active": {
                    "description": "Статус активности поставщика (активен/неактивен)",
                    "type": "boolean"
                },
                "legal_address": {
                    "description": "Юридический адрес поставщика",
                    "type": "string"
                },
                "name": {
                    "description": "Наименование поставщика",
                    "type": "string",
                    "maxLength": 140,
                    "minLength": 5
                },
                "other_fields": {
                    "description": "Дополнительные пользовательские поля",
                    "type": "object",
                    "additionalProperties": true
                },
                "payment_terms": {
                    "description": "Условия оплаты по контракту",
                    "type": "string"
                },
                "phone": {
                    "description": "Телефон поставщика",
                    "type": "string"
                },
                "product_categories": {
                    "description": "Категории товаров, поставляемых поставщиком",
                    "type": "string"
                },
                "product_types": {
                    "description": "Количество типов товаров от поставщика",
                    "type": "integer"
                },
                "purchase_amount": {
                    "description": "Общая сумма закупок у поставщика",
                    "type": "number"
                },
                "region": {
                    "description": "Регион или штат поставщика",
                    "type": "string"
                },
                "registration_date": {
                    "description": "Дата регистрации поставщика",
                    "type": "string"
                },
                "tax_id": {
                    "description": "Идентификационный номер налогоплательщика (ИНН)",
                    "type": "string"
                },
                "warehouse_address": {
                    "description": "Адрес склада поставщика",
                    "type": "string"
                },
                "website": {
                    "description": "Сайт поставщика",
                    "type": "string"
                }
            }
        },
        "domain.TokenResponse": {
            "type": "object",
            "properties": {
                "expires_in": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "sections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "domain.TokensRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "domain.Warehouse": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Адрес склада",
                    "type": "string"
                },
                "country": {
                    "description": "Страна склада",
                    "type": "string"
                },
                "current_occupancy": {
                    "description": "Текущая заполняемость склада",
                    "type": "integer"
                },
                "email": {
                    "description": "Электронная почта для связи",
                    "type": "string"
                },
                "id": {
                    "description": "Уникальный идентификатор склада",
                    "type": "integer"
                },
                "max_capacity": {
                    "description": "Максимальная вместимость склада",
                    "type": "integer"
                },
                "name": {
                    "description": "Название склада",
                    "type": "string"
                },
                "other_fields": {
                    "description": "Дополнительные пользовательские поля",
                    "type": "object",
                    "additionalProperties": true
                },
                "phone": {
                    "description": "Контактный телефон склада",
                    "type": "string"
                },
                "responsible_person": {
                    "description": "Ответственное лицо за склад",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "91.243.71.100:8080",
	BasePath:         "/api/web-api-gateway/v1",
	Schemes:          []string{},
	Title:            "Web api gateway API",
	Description:      "API gateway",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
